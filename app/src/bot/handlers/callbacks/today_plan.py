from aiogram import Router, F
from aiogram.types import CallbackQuery
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext

router = Router()

# Callback —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º (–Ω–∞–ø—Ä–∏–º–µ—Ä: task_complete_123)
@router.callback_query(F.data.startswith("task_complete_"))
async def complete_task(callback: CallbackQuery):
    task_id = callback.data.split("_")[-1]  # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –∑–∞–¥–∞—á–∏
    
    await callback.answer(f"–ó–∞–¥–∞—á–∞ {task_id} –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!", show_alert=True)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –¥–µ–ª–∞–µ–º –¥—Ä—É–≥–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
    await callback.message.edit_text(
        f"‚úÖ –ó–∞–¥–∞—á–∞ {task_id} –æ—Ç–º–µ—á–µ–Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π!",
        reply_markup=callback.message.reply_markup  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    )

# Callback –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏
@router.callback_query(F.data.startswith("time_"))
async def select_time(callback: CallbackQuery, state: FSMContext):
    selected_time = callback.data.split("_")[1]
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data(selected_time=selected_time)
    
    await callback.answer(f"–í—ã–±—Ä–∞–Ω–æ –≤—Ä–µ–º—è: {selected_time}")
    await callback.message.edit_text(f"üïê –í—ã –≤—ã–±—Ä–∞–ª–∏ –≤—Ä–µ–º—è: {selected_time}")